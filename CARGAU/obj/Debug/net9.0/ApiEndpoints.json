[
  {
    "ContainingType": "API.Controllers.CarsController",
    "Method": "AddCar",
    "RelativePath": "Cars/add",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "car",
        "Type": "API.Dto.Car.CreateCar",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API.Controllers.CarsController",
    "Method": "DeleteCarById",
    "RelativePath": "Cars/delete/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API.Controllers.CarsController",
    "Method": "GetCars",
    "RelativePath": "Cars/get",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API.Controllers.CarsController",
    "Method": "GetCarById",
    "RelativePath": "Cars/get/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API.Controllers.CarsController",
    "Method": "SearchCar",
    "RelativePath": "Cars/search",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "query",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "price",
        "Type": "System.Double",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API.Controllers.CarsController",
    "Method": "UpdateCar",
    "RelativePath": "Cars/update/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateCar",
        "Type": "API.Dto.Car.UpdateCar",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API.Controllers.OrdersController",
    "Method": "AddOrder",
    "RelativePath": "Orders/add",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "newOrder",
        "Type": "API.Dto.Order.CreateOrder",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API.Controllers.OrdersController",
    "Method": "DeleteOrderById",
    "RelativePath": "Orders/delete/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API.Controllers.OrdersController",
    "Method": "GetOrders",
    "RelativePath": "Orders/get",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API.Controllers.OrdersController",
    "Method": "GetOrderById",
    "RelativePath": "Orders/get/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API.Controllers.OrdersController",
    "Method": "UpdateOrder",
    "RelativePath": "Orders/update/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateOrder",
        "Type": "API.Dto.Order.UpdateOrder",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API.Controllers.ServicesController",
    "Method": "AddService",
    "RelativePath": "Services/add",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "service",
        "Type": "API.Dto.Service.CreateService",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API.Controllers.ServicesController",
    "Method": "GetServices",
    "RelativePath": "Services/get",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API.Controllers.ServicesController",
    "Method": "GetServiceById",
    "RelativePath": "Services/get/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API.Controllers.ServicesController",
    "Method": "UpdateService",
    "RelativePath": "Services/update/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateService",
        "Type": "API.Dto.Service.UpdateService",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API.Endpoints.RefreshTokenEndpoint",
    "Method": "Delete",
    "RelativePath": "users/{id}/refresh-tokens",
    "HttpMethod": "DELETE",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.UsersController",
    "Method": "GetCurrentUser",
    "RelativePath": "Users/get-current-user",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API.Controllers.UsersController",
    "Method": "Login",
    "RelativePath": "Users/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "API.Dto.User.LoginUserRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.String",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.UsersController",
    "Method": "UpdateProfile",
    "RelativePath": "Users/profile",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "API.Dto.User.UpdateProfileRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API.Endpoints.RefreshTokenEndpoint",
    "Method": "Login",
    "RelativePath": "users/refresh-token",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "API.Dto.RefreshToken.Request",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "API.Dto.RefreshToken.Response",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.UsersController",
    "Method": "Register",
    "RelativePath": "Users/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "API.Dto.User.RegisterUserRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      }
    ]
  }
]